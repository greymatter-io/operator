#!/bin/bash

# Builds a local, native build by default
# Can build a container build if passed appropriate args

set -euf -o pipefail

cmd_build () {
  if [[ $OSTYPE == 'linux-gnu' ]]
  then
    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o bin/operator main.go
  else
    make build
  fi
}

cmd_debug () {
    go build -o bin/operator \
        --mod=vendor \
        -tags debug \
        -gcflags 'all=-N -l' github.com/greymatter-io/operator
}

cmd_help () {
  echo 'valid args: container, debug_container, build, help'
}

_buildah_build () {
  local tag=$1
  local dockerfile=$2
  buildah bud \
    --platform linux/amd64 \
    --build-arg username=$GREYMATTER_REGISTRY_USERNAME \
    --build-arg password=$GREYMATTER_REGISTRY_PASSWORD \
    -t "$tag" --layers -f "$dockerfile" .
}

_docker_build () {
  local tag=$1
  local dockerfile=$2
  docker build \
  --platform linux/amd64 \
  --build-arg username=$GREYMATTER_REGISTRY_USERNAME \
  --build-arg password=$GREYMATTER_REGISTRY_PASSWORD \
  -t "$tag" -f "$dockerfile" .
}

cmd_container () {
  if type -p buildah  &>/dev/null; then
    _buildah_build "docker.greymatter.io/internal/gm-operator:latest" "Dockerfile"
  else
    _docker_build "docker.greymatter.io/internal/gm-operator:latest" "Dockerfile"
  fi
}

cmd_debug_container () {
  if type -p buildah  &>/dev/null; then
    _buildah_build "docker.greymatter.io/internal/gm-operator:latest-debug" "Dockerfile.debug"
  else
    _docker_build "docker.greymatter.io/internal/gm-operator:latest-debug" "Dockerfile.debug"
  fi
}

usage() {
  cmd_help
  exit 1
}

if [ $# -eq 0 ]; then
  cmd_build
else
  MODE="${1:-}"
  case "$MODE" in
    build|container|debug_container|debug|help)
      shift
      "cmd_$MODE" "$@"
      ;;
    *)
      usage
      ;;
  esac
fi
