#!/bin/bash

# Called by CI only
set -e

## Test

run_test() {
  go mod vendor
  ./scripts/test lint
  install_cue_deps
  ./scripts/test
}

# Downloads CUE dependencies for tests and for adding to the image.
install_cue_deps() {
  (cd ./pkg/version/cue.mod; cue get go k8s.io/api/...)
}

## Build

run_build() {
  # Login to Nexus in order to add the greymatter CLI to the image.
  _nexus_login
  _build_image "docker.greymatter.io/development/gm-operator:latest" "Dockerfile"
}

_build_image () {
  if type -p buildah  &>/dev/null; then
    buildah bud --build-arg username=$NEXUS_USER --build-arg password=$NEXUS_PASS -t "$1" --layers -f $2 .
  else
    docker build --build-arg username=$NEXUS_USER --build-arg password=$NEXUS_PASS -t "$1" -f $2 .
  fi
}

## Release

run_release() {
  if [[ -z "$BUILDKITE_BRANCH" ]]; then
    echo "cibuild release: must be run in ci"
    exit 1
  fi

  _nexus_login
  release_image
  release_bundle
}

_retag_image() {
  local from=$1
  local to=$2
  if type -p buildah &>/dev/null; then
    buildah tag $from $to
  else
    docker tag $from $to
  fi
}

_push_image() {
  if type -p buildah &>/dev/null; then
    buildah push "$1"
  else
    docker push "$1"
  fi
}

_nexus_login() {
  if type -p buildah &>/dev/null; then
    buildah login -u $NEXUS_USER -p $NEXUS_PASS docker.greymatter.io
  else
    docker login -u $NEXUS_USER -p $NEXUS_PASS docker.greymatter.io
  fi
}

release_image() {
  if [[ $BUILDKITE_BRANCH != "main" ]]; then
    echo "skip release image"
    exit 0
  fi

  local latest="docker.greymatter.io/development/gm-operator:latest"
  _push_image $latest

  if [[ -n "$BUILDKITE_TAG" ]]; then
    local tagged="docker.greymatter.io/development/gm-operator:${BUILDKITE_TAG:1}"
    _retag_image $latest $tagged
    _push_image $tagged
  fi
}

# Build and push an OLM-compatible image of manifests for easy installation in OpenShift cluster contexts.
# Note that the bundled deployment manifest points to a docker.greymatter.io/release/gm-operator:$1 image.
_bundle() {
  sed -i "s/SEMVER_VERSION/$1/" config/olm/manifests/kustomization.yaml
	kustomize build config/olm/manifests | operator-sdk generate bundle -q --package gm-operator --overwrite --version $1
	operator-sdk bundle validate ./bundle
  _build_image "docker.greymatter.io/development/gm-operator-bundle:$1" bundle.Dockerfile
  _push_image "docker.greymatter.io/development/gm-operator-bundle:$1"
}

release_bundle() {
  if [[ $BUILDKITE_BRANCH != "main" ]]; then
    echo "skip release bundle"
  fi

  if [[ -n "$BUILDKITE_TAG" ]]; then
    _bundle ${BUILDKITE_TAG:1}
  fi
}

if [ $# -lt 1 ]
then
  echo "cibuild: missing argument"
  exit 1
fi

case $1 in
  test)
    run_test
    ;;
  build)
    run_build
    ;;
  release)
    run_release
    ;;
  *)
    echo "invalid argument $1"
    exit 1
    ;;
esac
