#!/bin/bash

# Called by CI only
set -e

install_greymatter_cli() {
  wget --user $NEXUS_USER --password $NEXUS_PASSWORD \
    nexus.greymatter.io/repository/raw/release/gm-cli/greymatter-3.0.0.tar.gz \
    -O /tmp/greymatter.tar.gz
  tar -C /tmp -zxf /tmp/greymatter.tar.gz
  sudo mv /tmp/greymatter.linux /usr/local/bin/greymatter
}

install_operator-sdk() {
  wget https://github.com/operator-framework/operator-sdk/releases/download/v1.12.0/operator-sdk_linux_amd64 \
    -O /tmp/operator-sdk
  chmod +x /tmp/operator-sdk
  sudo mv /tmp/operator-sdk /usr/local/bin/operator-sdk
}

install_cue_deps() {
  go install cuelang.org/go/cmd/cue@latest
  (cd ./pkg/version/cue.mod; cue get go k8s.io/api/...)
}

install_staticcheck() {
  wget https://github.com/dominikh/go-tools/releases/download/2021.1/staticcheck_linux_amd64.tar.gz \
    -O /tmp/staticcheck.tar.gz
  tar -C /tmp -zxf /tmp/staticcheck.tar.gz
  sudo mv /tmp/staticcheck/staticcheck /usr/local/bin/staticcheck
}

release_container() {
  if [[ -z "$CIRCLECI" ]]; then
    echo "cibuild release: must be run in circleci"
    exit 1
  fi

  if [[ $CIRCLE_BRANCH != "main" ]]; then
    exit 0
  fi

  docker login -u $NEXUS_USER -p $NEXUS_PASSWORD docker.greymatter.io
  echo "branch workflow"
  make docker-push VERSION=latest

  if [[ -n "$CIRCLE_TAG" ]]; then
    echo "tag workflow"
    local operator_from="docker.greymatter.io/development/gm-operator:latest"
    local operator_to="docker.greymatter.io/development/gm-operator:${CIRCLE_TAG:1}"
    docker tag $operator_from $operator_to
    make docker-push VERSION=${CIRCLE_TAG:1}
  fi
}

release_bundle() {
  if [[ -z "$CIRCLECI" ]]; then
    echo "cibuild bundle: must be run in circleci"
    exit 1
  fi

  if [[ $CIRCLE_BRANCH != "main" ]]; then
    exit 0
  fi

  echo "branch workflow"

  install_operator-sdk
  make bundle
  make bundle-build VERSION=latest
  docker login -u $NEXUS_USER -p $NEXUS_PASSWORD docker.greymatter.io
  make bundle-push VERSION=latest

  if [[ -n "$CIRCLE_TAG" ]]; then
    echo "tag workflow"
    local operator_from="docker.greymatter.io/development/gm-operator-bundle:latest"
    local operator_to="docker.greymatter.io/development/gm-operator-bundle:${CIRCLE_TAG:1}"
    docker tag $operator_from $operator_to
    make bundle-push VERSION=${CIRCLE_TAG:1}
  fi
}

if [ $# -lt 1 ]
then
  echo "cibuild: missing argument"
  exit 1
fi

case $1 in
  test)
    install_greymatter_cli
    install_staticcheck
    go mod tidy
    go mod vendor
    ./scripts/test lint
    ./scripts/test
    ;;
  container)
    install_cue_deps
    ./scripts/build docker
    ;;
  release)
    release_container
    ;;
  bundle)
    release_bundle
    ;;
  *)
    echo "invalid argument $1"
    exit 1
    ;;
esac
