# Patch the bootstrap config since we need to keep cert generation turned on
apiVersion: v1
kind: ConfigMap
metadata:
  name: gm-manager-config
  namespace: gm-operator
data:
  bootstrap_config.yaml: |
    kind: BootstrapConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 715805a0.greymatter.io
    imagePullSecretName: gm-docker-secret
    disableWebhookCertGeneration: false
    clusterIngressName: cluster
---
# Add a configmap for configuring cfssl
apiVersion: v1
kind: ConfigMap
metadata:
  name: cfssl-config
  namespace: gm-operator
data:
  ca-config.json: |
    {
      "signing": {
        "default": {
          "expiry": "8760h"
        },
        "profiles": {
          "server": {
            "usages": ["signing", "key encipherment", "server auth", "client auth"],
            "expiry": "8760h"
          }
        }
      }
    }
  ca-csr.json: |
    {
      "CN": "greymatter.io",
      "hosts": [
        "greymatter.io",
        "www.greymatter.io"
      ],
      "key": {
        "algo": "rsa",
        "size": 2048
      },
      "names": [
        {
          "C": "US",
          "ST": "VA",
          "O": "Grey Matter"
        }
      ]
    }
---
# Add an opaque secret which will be populated by the operator with signed certs from cfssl
apiVersion: v1
kind: Secret
metadata:
  name: gm-controller-manager-service-cert
  namespace: gm-operator
data:
  tls.crt: ""
  tls.key: ""
---
# Patch our deployment so that a cfssl container is injected and the right Docker image is used
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gm-controller-manager
  namespace: gm-operator
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - name: cfssl
        image: docker.io/bcmendoza/cfssl
        volumeMounts:
        - mountPath: /tmp/cfssl
          name: cfssl-config
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
      - args:
        - --config=bootstrap_config.yaml
        command:
        - /manager
        image: docker.greymatter.io/internal/gm-operator:latest-kops
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
          readOnly: true
        - mountPath: /bootstrap_config.yaml
          name: manager-config
          subPath: bootstrap_config.yaml
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
      imagePullSecrets:
      - name: gm-docker-secret
      securityContext:
        runAsNonRoot: true
      serviceAccountName: gm-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-cert
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          secretName: gm-controller-manager-service-cert
      - configMap:
          name: gm-manager-config
        name: manager-config
      - name: cfssl-config
        configMap:
          name: cfssl-config
